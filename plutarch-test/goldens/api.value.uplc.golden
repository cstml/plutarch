singleton (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i5 (bData i4) (mapData i1)) (i4 (bData i2) (iData i1))) #c0 #736f6d65746f6b656e 1) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
valueOf (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> \i0 -> i2 (unMapData (i16 i3))) (bData i2) i3 (\i0 -> i5 (\i0 -> \i0 -> \i0 -> i2 (unIData (i17 i3))) (bData i2) i1 (\i0 -> i1) (delay 0)) (delay 0)) ((\i0 -> (\i0 -> i13 (bData i16) (mapData i1)) (i12 (bData i16) (iData i1))) 1) i14 i15) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force i1) i3 ((\i0 -> i6 i1 i2) (\i0 -> equalsData (i12 i1) i3)))) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (i1 (\i0 -> \i0 -> \i0 -> force (i5 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i6 (i2 (i7 i1)) (delay (\i0 -> \i0 -> i2 (i9 i3))) (delay (i3 i2 (i8 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force headList)) (force tailList)) (force (force fstPair))) (force (force sndPair))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))